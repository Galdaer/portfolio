# Advanced VPN Service Configuration Example
# This demonstrates the universal system handling complex VPN setup

image=ghcr.io/linuxserver/wireguard:latest
# Basic VPN requirements
vpn=true
cap_net_admin=true
cap_sys_admin=true
# Network configuration
network=host
# Device access
device=/dev/net/tun:/dev/net/tun
# Environment variables for VPN setup
env=PUID=1000,PGID=1000,TZ=America/New_York,SERVERURL=vpn.example.com,SERVERPORT=51820,PEERS=5,PEERDNS=auto,INTERNAL_SUBNET=10.13.13.0
# Volume mounts for config persistence
volumes=/path/to/appdata/config:/config,/lib/modules:/lib/modules:ro
# Port mappings for VPN
port=51820/udp
# Resource limits
memory=256m
cpus=1.0
# Restart policy
restart=unless-stopped
# Logging
log_driver=json-file
log_opt=max-size=10m,max-file=3
# Security
security_opt=no-new-privileges:true
# Sysctls for VPN routing
sysctl=net.ipv4.conf.all.src_valid_mark=1,net.ipv4.ip_forward=1
# Health check
health_cmd=ping -c 1 8.8.8.8 || exit 1
health_interval=30s
health_retries=3
health_timeout=10s
# Labels for management
label=traefik.enable=false,com.example.service=vpn,com.example.environment=production
