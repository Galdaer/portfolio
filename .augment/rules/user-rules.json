{
    "codeQuality": {
        "python": {
            "enforceFlake8": true,
            "maxLineLength": 100,
            "removeTrailingWhitespace": true,
            "enforceBlankLineRules": true,
            "pydanticConstructors": "explicit-keywords",
            "optionalTypes": "strict",
            "rules": [
                "No trailing whitespace (W293)",
                "Proper blank line spacing (E302, E305)",
                "Import organization (E401)",
                "Line length compliance (E501)",
                "Pydantic models use keyword arguments",
                "Optional[Type] for nullable parameters",
                "All required fields in response models"
            ]
        },
        "shell": {
            "enforceShellcheck": true,
            "quotingStyle": "double",
            "variableExpansion": "explicit"
        },
        "typescript": {
            "buildStrategy": "docker-only",
            "noLocalNodeModules": true,
            "enforceTypeScript": true,
            "maxLineLength": 100,
            "rules": [
                "Build only in Docker containers",
                "Never commit node_modules/ or build artifacts",
                "Use explicit type annotations",
                "Healthcare-compliant error handling"
            ]
        }
    },
    "healthcareCompliance": {
        "phiProtection": "strict",
        "auditLogging": "required",
        "errorMessages": "generic",
        "typeSafety": "strict"
    },
    "deploymentStrategy": {
        "architecture": "single-clinic-on-premise",
        "multiTenant": false,
        "cloudDependency": "none",
        "localInference": "required",
        "buildStrategy": "docker-containerized"
    },
    "authentication": {
        "primaryMode": "integrate-existing-or-standalone",
        "userEnvFiles": true,
        "emergencyAccess": true,
        "supportedSystems": [
            "active_directory",
            "ldap",
            "saml_sso",
            "standalone"
        ]
    },
    "remoteAgentPrompts": {
        "minimumWorkDuration": "2-4 hours",
        "scopeExpansion": "encouraged",
        "codebaseAnalysisFirst": "mandatory",
        "incrementalValidation": "required",
        "autonomousExecution": "default"
    },
    "asyncPatterns": {
        "redisOperations": "sync",
        "databaseOperations": "sync",
        "webFramework": "async",
        "securityMiddleware": "async-compatible-sync",
        "rules": [
            "Use sync Redis clients for healthcare security",
            "Convert timedelta objects to seconds for Redis",
            "Be explicit about async/sync boundaries",
            "Healthcare middleware should support both patterns"
        ]
    },
    "typeSafety": {
        "pydanticModels": "explicit-keywords",
        "optionalParameters": "strict-typing",
        "methodSignatures": "exact-match",
        "requestHandling": "optional-aware",
        "rules": [
            "Use Optional[Type] not Type = None",
            "Provide all Pydantic model fields explicitly",
            "Match exact method signatures for security methods",
            "Handle None values gracefully in all auth methods"
        ]
    }
}